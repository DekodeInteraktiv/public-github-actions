name: Checkout and build code

on:
    workflow_call:
        inputs:
            TAG:
                description: 'Tag/commit/branch to checkout'
                required: false
                type: string
                default: ''
            PHP_VERSION:
                description: 'The PHP version to use'
                required: false
                type: string
            DEFAULT_PHP_VERSION:
                description: 'The fallback PHP version to use'
                required: false
                type: string
                default: '8.2'
            BUILD_FOR_DEPLOY:
                description: 'Whether to build for deployment immediately or to keep developer tools'
                required: false
                type: boolean
                default: false
            ARTIFACT_NAME:
                description: 'The artifact to deploy'
                required: false
                type: string
                default: 'compressed-code-artifact'

jobs:
    checkout-and-build:
        runs-on: ubuntu-latest

        steps:
            - name: Checkout code
              uses: actions/checkout@v3
              with:
                  ref: ${{ inputs.TAG }}
            
            - name: Read PHP version from composer.json (with fallback)
              id: php-version
              run: |
                if [ -n "${{ inputs.PHP_VERSION }}" ]; then
                  echo "PHP_VERSION=${{ inputs.PHP_VERSION }}" >> $GITHUB_ENV
                  exit 0
                fi

                if [ ! -f composer.json ]; then
                  echo "PHP_VERSION=${{ inputs.DEFAULT_PHP_VERSION }}" >> $GITHUB_ENV
                  exit 0
                fi

                if ! command -v "jq" &> /dev/null; then
                  echo "PHP_VERSION=${{ inputs.DEFAULT_PHP_VERSION }}" >> $GITHUB_ENV
                  exit 0
                fi

                # Try to extract PHP version from composer.json
                php_version=$(jq -r '.config.platform.php // empty' composer.json)
                
                # Use a fallback version if not defined
                if [ -z "$php_version" ]; then
                  php_version=${{ inputs.DEFAULT_PHP_VERSION }}
                fi

                echo "PHP_VERSION=${php_version}" >> $GITHUB_ENV

            - name: Get Composer cache directory
              id: composer-cache
              run: echo "dir=$(composer config cache-files-dir)" >> $GITHUB_OUTPUT

            - name: Set up Composer caching
              uses: actions/cache@v3
              env:
                  cache-name: cache-composer-dependencies
              with:
                  path: ${{ steps.composer-cache.outputs.dir }}
                  key: ${{ runner.os }}-composer-${{ hashFiles('**/composer.lock') }}
                  restore-keys: |
                      ${{ runner.os }}-composer-

            - name: Setup PHP environment
              uses: shivammathur/setup-php@v2
              with:
                  php-version: ${{ env.PHP_VERSION }}
                  coverage: none
                  tools: composer, cs2pr

            - name: Install Composer dependencies
              if: ${{ !inputs.BUILD_FOR_DEPLOY }}
              env:
                  COMPOSER_AUTH: ${{ secrets.COMPOSER_AUTH }}
              run: |
                  composer install --prefer-dist --no-suggest --no-progress --no-ansi --no-interaction
                  if composer run-script --list | grep -q build-translations; then
                      composer run build-translations
                  else
                      echo "build-translations command not found. Skipping."
                  fi
                  echo "vendor/bin" >> $GITHUB_PATH

            - name: Install Composer dependencies for deployment
              if: ${{ inputs.BUILD_FOR_DEPLOY }}
              env:
                  COMPOSER_AUTH: ${{ secrets.COMPOSER_AUTH }}
              run: |
                  composer install --prefer-dist --no-suggest --no-progress --no-ansi --no-interaction --no-dev
                  if composer run-script --list | grep -q build-translations; then
                      composer run build-translations
                  else
                      echo "build-translations command not found. Skipping."
                  fi
                  echo "vendor/bin" >> $GITHUB_PATH

            - name: Setup Node.js environment
              uses: actions/setup-node@v4
              with:
                  node-version-file: 'package.json'
                  check-latest: true
                  cache: npm

            - name: Install Dependencies
              run: npm ci

            - name: Build assets
              run: npm run build

            - name: Create code artifact archive
              working-directory: ./
              run: |
                  touch ${{ inputs.ARTIFACT_NAME }}.tar.gz
                  tar -czf ${{ inputs.ARTIFACT_NAME }}.tar.gz --exclude=${{ inputs.ARTIFACT_NAME }}.tar.gz --exclude=.git .

            - name: Upload Artifact
              uses: actions/upload-artifact@v4
              with:
                name: ${{ inputs.ARTIFACT_NAME }}
                path: ${{ inputs.ARTIFACT_NAME }}.tar.gz
                retention-days: 1
                overwrite: true
